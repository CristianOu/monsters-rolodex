{"version":3,"sources":["componets/card-list/card-list.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["CardList","props","console","log","className","monsters","map","monster","name","id","App","state","fetch","then","response","json","users","setState","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAGaA,G,YAAW,SAAAC,GAEpB,OADAC,QAAQC,IAAIF,GACL,qBAAKG,UAAU,YAAf,SACFH,EAAMI,SAASC,KAAI,SAAAC,GAAO,OACvB,mCAAuBA,EAAQC,KAA/B,MAASD,EAAQE,WCsBdC,E,kDAxBb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXN,SAAU,IAJA,E,gEAQO,IAAD,OAClBO,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEZ,SAAUW,S,+BAI7C,OACI,qBAAKZ,UAAU,MAAf,SACE,cAAC,EAAD,CAAUC,SAAUa,KAAKP,MAAMN,iB,GAlBvBc,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.462aaf5e.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card-list.styles.css'\r\n\r\nexport const CardList = props => {\r\n    console.log(props);\r\n    return <div className='card-list'>\r\n        {props.monsters.map(monster =>\r\n            <h1 key={monster.id}> {monster.name} </h1>)}\r\n    </div>;\r\n}","import './App.css';\nimport React, {Component} from  'react';\nimport {CardList} from \"./componets/card-list/card-list.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => this.setState({ monsters: users }));\n  }\n\n  render() {\n    return (\n        <div className=\"App\">\n          <CardList monsters={this.state.monsters}/>\n        </div>\n\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}